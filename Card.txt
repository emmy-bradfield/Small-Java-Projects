package blackjack;

import java.util.concurrent.ThreadLocalRandom;

public class Card {

	Integer cardValue;
	Boolean playerOne = true;
	Integer HandOne = 0;
	Integer HandTwo = 0;
	Integer currentCard;
	Boolean OneHasAce = false;
	Boolean TwoHasAce = false;
	Integer HandOneAce;
	Integer HandTwoAce;

	public Card() {
	};

	public void turnLoop() {
		for (int i = 1; i < 999; i++) {
			drawCard();
		}
	}

	public void drawCard() {

	}

	public void dealtHand() {
		getOneAce();
		handOneScore();
		if (OneHasAce = false) {
			System.out.print("\t\t\t\t(Total: " + HandOne + ")");
		} else if (OneHasAce = true) {
			handOneAce();
			System.out.print("\t\t\t\t(Total: " + HandOne + " or " + HandOneAce + ")");
		}
	}

	public boolean whoDrew() {
		if (playerOne == true) {
			handOneScore();
			playerOne = false;
			if (OneHasAce = false) {
				System.out.print("\t\t\t\t(Total: " + HandOne + ")");
			} else {
				System.out.print("\t\t\t\t(Total: " + HandOne + " or " + HandOneAce + ")");
			}
		} else {
			handTwoScore();
			playerOne = true;
			System.out.print("\n\nOpponent's turn complete, starting your turn!\n");
		}
		return playerOne;
	}

	public int handOneScore() {
		HandOne = HandOne + getCard();
		return HandOneAce;
	}
	
	public int handOneAce() {
		HandOneAce = HandOne + getCard() + 11;
		return HandOneAce;
	}

	public int handTwoScore() {
		HandTwo = HandTwo + getCard();
		return HandTwo;
	}
	
	public int handTwoAce() {
		HandTwoAce = HandTwo + getCard() + 11;
		return HandTwoAce;
	}

	public void firstCard() {
		setOneAce(false);
		int a = 0;
		int loop = ThreadLocalRandom.current().nextInt(2);
		if (loop == 0) {
			a = ThreadLocalRandom.current().nextInt(2, 11);
			System.out.print("\t\t  You drew ... " + a + "\n");
			setCard(a);
		} else if (loop == 1) {
			a = ThreadLocalRandom.current().nextInt(10, 14);
			if (a == 13) {
				System.out.print("\t\tYou drew ... King\n");
				setCard(10);
			} else if (a == 12) {
				System.out.print("\t\tYou drew ... Queen\n");
				setCard(10);
			} else if (a == 11) {
				System.out.println("\t\tYou drew ... Jack\n");
				setCard(10);
			} else if (a == 10) {
				System.out.print("\t\tYou drew ... Ace\n");
				setCard(1);
				setOneAce(true);
			}
		}
		handOneScore();
		a = 0;
		loop = ThreadLocalRandom.current().nextInt(2);
		if (loop == 0) {
			a = ThreadLocalRandom.current().nextInt(2, 11);
			setCard(a);
			System.out.print("\t\t  You drew ... " + a + "\n");
		} else if (loop == 1) {
			a = ThreadLocalRandom.current().nextInt(10, 14);
			if (a == 13) {
				System.out.print("\t\tYou drew ... King\n");
				setCard(10);
			} else if (a == 12) {
				System.out.print("\t\tYou drew ... Queen\n");
				setCard(10);
			} else if (a == 11) {
				System.out.println("\t\tYou drew ... Jack\n");
				setCard(10);
			} else if (a == 10) {
				System.out.print("\t\tYou drew ... Ace\n");
				setCard(1);
				setOneAce(true);
			}
		}
		dealtHand();
	}

	public int getCard() {
		return cardValue;
	}

	public void setCard(int cardValue) {
		this.cardValue = cardValue;
	}

	public boolean getOneAce() {
		return OneHasAce;
	}

	public void setOneAce(boolean OneHasAce) {
		this.OneHasAce = OneHasAce;
	}

	public boolean getTwoAce() {
		return TwoHasAce;
	}

	public void setTwoAce(boolean TwoHasAce) {
		this.TwoHasAce = TwoHasAce;
	}

}
